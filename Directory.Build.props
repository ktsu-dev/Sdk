<Project>
  <PropertyGroup>
    <!-- Common settings for all projects -->
    <AssemblyName>ktsu.$(MSBuildProjectName.Replace(" ", ""))</AssemblyName>
    <OutputType>Library</OutputType>

    <!-- GitHub related properties -->
    <GitHubWorkflowFileName>dotnet-sdk.yml</GitHubWorkflowFileName>
    <GitHubCopilotInstructionsFileName>copilot-instructions.md</GitHubCopilotInstructionsFileName>
    <GitHubDir>$([MSBuild]::NormalizePath("$(SolutionDir)\.github"))</GitHubDir>
    <GitHubWorkflowDir>$([MSBuild]::NormalizePath("$(GitHubDir)\workflows"))</GitHubWorkflowDir>
    <GitHubWorkflowFilePath>$([MSBuild]::NormalizePath("$(GitHubWorkflowDir)\$(GitHubWorkflowFileName)"))</GitHubWorkflowFilePath>
    <GitHubCopilotInstructionsFilePath>$([MSBuild]::NormalizePath("$(GitHubDir)\$(GitHubCopilotInstructionsFileName)"))</GitHubCopilotInstructionsFilePath>

    <!-- git related files -->
    <GitIgnoreFileName>.gitignore</GitIgnoreFileName>
    <GitAttributesFileName>.gitattributes</GitAttributesFileName>
    <GitConfigFileName>.gitconfig</GitConfigFileName>
    <GitModulesFileName>.gitmodules</GitModulesFileName>
    <GitMailMapFileName>.mailmap</GitMailMapFileName>
    <GitIgnoreFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitIgnoreFileName)"))</GitIgnoreFilePath>
    <GitAttributesFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitAttributesFileName)"))</GitAttributesFilePath>
    <GitConfigFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitConfigFileName)"))</GitConfigFilePath>
    <GitModulesFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitModulesFileName)"))</GitModulesFilePath>
    <GitMailMapFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(GitMailMapFileName)"))</GitMailMapFilePath>

    <!-- Build related files -->
    <EditorConfigFileName>.editorconfig</EditorConfigFileName>
    <RunSettingsFileName>.runsettings</RunSettingsFileName>
    <EditorConfigFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(EditorConfigFileName)"))</EditorConfigFilePath>
    <RunSettingsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(RunSettingsFileName)"))</RunSettingsFilePath>

    <!-- Primary Project properties-->
    <PrimaryProjectName>$(SolutionName)</PrimaryProjectName>
    <PrimaryProjectFileName>$(PrimaryProjectName).csproj</PrimaryProjectFileName>
    <PrimaryProjectPath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(PrimaryProjectName)\$(PrimaryProjectFileName)"))</PrimaryProjectPath>
    <PrimaryProjectExists>false</PrimaryProjectExists>
    <PrimaryProjectExists Condition="Exists($(PrimaryProjectPath))">true</PrimaryProjectExists>

    <!-- Descriptive properties -->
    <ContributorsFileName>CONTRIBUTORS.md</ContributorsFileName>
    <ContributorsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ContributorsFileName)"))</ContributorsFilePath>
    <Contributors Condition="Exists($(ContributorsFilePath))">$([System.IO.File]::ReadAllText($(ContributorsFilePath)).Trim())</Contributors>

    <ChangelogFileName>CHANGELOG.md</ChangelogFileName>
    <ChangelogFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ChangelogFileName)"))</ChangelogFilePath>
    <Changelog Condition="Exists($(ChangelogFilePath))">$([System.IO.File]::ReadAllText($(ChangelogFilePath)).Trim())</Changelog>

    <ReadmeFileName>README.md</ReadmeFileName>
    <ReadmeFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ReadmeFileName)"))</ReadmeFilePath>
    <Readme Condition="Exists($(ReadmeFilePath))">$([System.IO.File]::ReadAllText($(ReadmeFilePath)).Trim())</Readme>

    <LicenseFileName>LICENSE.md</LicenseFileName>
    <LicenseFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(LicenseFileName)"))</LicenseFilePath>
    <License Condition="Exists($(LicenseFilePath))">$([System.IO.File]::ReadAllText($(LicenseFilePath)).Trim())</License>

    <AuthorsFileName>AUTHORS.md</AuthorsFileName>
    <AuthorsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(AuthorsFileName)"))</AuthorsFilePath>
    <Authors Condition="Exists($(AuthorsFilePath))">$([System.IO.File]::ReadAllText($(AuthorsFilePath)).Trim())</Authors>

    <AuthorsUrlFileName>AUTHORS.url</AuthorsUrlFileName>
    <AuthorsUrlFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(AuthorsUrlFileName)"))</AuthorsUrlFilePath>
    <AuthorsUrl Condition="Exists($(AuthorsUrlFilePath))">$([System.IO.File]::ReadAllText($(AuthorsUrlFilePath)).Trim())</AuthorsUrl>

    <ProjectUrlFileName>PROJECT.url</ProjectUrlFileName>
    <ProjectUrlFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(ProjectUrlFileName)"))</ProjectUrlFilePath>
    <ProjectUrl Condition="Exists($(ProjectUrlFilePath))">$([System.IO.File]::ReadAllText($(ProjectUrlFilePath)).Trim())</ProjectUrl>

    <CopyrightFileName>COPYRIGHT.md</CopyrightFileName>
    <CopyrightFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(CopyrightFileName)"))</CopyrightFilePath>
    <Copyright Condition="Exists($(CopyrightFilePath))">$([System.IO.File]::ReadAllText($(CopyrightFilePath)).Trim())</Copyright>

    <VersionFileName>VERSION.md</VersionFileName>
    <VersionFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(VersionFileName)"))</VersionFilePath>
    <Version Condition="Exists($(VersionFilePath))">$([System.IO.File]::ReadAllText($(VersionFilePath)).Trim())</Version>

    <DescriptionFileName>DESCRIPTION.md</DescriptionFileName>
    <DescriptionFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(DescriptionFileName)"))</DescriptionFilePath>
    <Description Condition="Exists($(DescriptionFilePath))">$([System.IO.File]::ReadAllText($(DescriptionFilePath)).Trim())</Description>

    <TagsFileName>TAGS.md</TagsFileName>
    <TagsFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(TagsFileName)"))</TagsFilePath>
    <Tags Condition="Exists($(TagsFilePath))">$([System.IO.File]::ReadAllText($(TagsFilePath)).Trim())</Tags>

    <IconFileName>icon.png</IconFileName>
    <IconFilePath>$([MSBuild]::NormalizePath("$(SolutionDir)\$(IconFileName)"))</IconFilePath>

    <!-- NuGet package properties -->
    <Title>$(AssemblyName)</Title>
    <Company>$(Authors)</Company>
    <Product>$(AssemblyName)</Product>

    <PackageType>MSBuildSdk</PackageType>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(Version)</PackageVersion>
    <PackageIcon>$(IconFileName)</PackageIcon>
    <PackageReadmeFile>$(ReadmeFileName)</PackageReadmeFile>
    <PackageLicenseFile>$(LicenseFileName)</PackageLicenseFile>
    <PackageReleaseNotes>$(Changelog)</PackageReleaseNotes>
    <PackageDescription>$(Description)</PackageDescription>
    <PackageTags>$(Tags)</PackageTags>
    <PackageProjectUrl>$(ProjectUrl)</PackageProjectUrl>
    <IncludeSource>true</IncludeSource>
    <IncludeContentInPack>true</IncludeContentInPack>
    <PackRelease>true</PackRelease>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <IsPackable>true</IsPackable>

    <!-- Continuous Integration Build -->
    <ContinuousIntegrationBuild>false</ContinuousIntegrationBuild>
    <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true' Or '$(TF_BUILD)' == 'true'">true</ContinuousIntegrationBuild>
  </PropertyGroup>
</Project>
